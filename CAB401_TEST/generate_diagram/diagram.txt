digraph someDotGraph {
"node 0" -> "node 1";
"node 1" -> "node 2";
"node 1" -> "node 12";
"node 1" -> "node 10";
"node 1" -> "node 19";
"node 1" -> "node 28";
"node 1" -> "node 20";
"node 1" -> "node 17";
"node 2" -> "node 3";
"node 2" -> "node 15";
"node 2" -> "node 26";
"node 2" -> "node 27";
"node 2" -> "node 14";
"node 2" -> "node 8";
"node 2" -> "node 25";
"node 3" -> "node 4";
"node 3" -> "node 23";
"node 3" -> "node 29";
"node 3" -> "node 24";
"node 3" -> "node 9";
"node 3" -> "node 12";
"node 3" -> "node 14";
"node 4" -> "node 5";
"node 4" -> "node 9";
"node 4" -> "node 30";
"node 4" -> "node 31";
"node 4" -> "node 14";
"node 4" -> "node 19";
"node 4" -> "node 16";
"node 5" -> "node 6";
"node 5" -> "node 16";
"node 5" -> "node 15";
"node 5" -> "node 24";
"node 5" -> "node 12";
"node 5" -> "node 23";
"node 5" -> "node 6";
"node 6" -> "node 7";
"node 6" -> "node 12";
"node 6" -> "node 8";
"node 6" -> "node 13";
"node 6" -> "node 25";
"node 6" -> "node 26";
"node 6" -> "node 29";
"node 7" -> "node 8";
"node 7" -> "node 16";
"node 7" -> "node 25";
"node 7" -> "node 23";
"node 7" -> "node 21";
"node 7" -> "node 30";
"node 7" -> "node 11";
"node 8" -> "node 9";
"node 8" -> "node 29";
"node 8" -> "node 12";
"node 8" -> "node 20";
"node 8" -> "node 19";
"node 8" -> "node 30";
"node 8" -> "node 24";
"node 9" -> "node 10";
"node 9" -> "node 15";
"node 9" -> "node 9";
"node 9" -> "node 16";
"node 9" -> "node 27";
"node 9" -> "node 11";
"node 9" -> "node 22";
"node 10" -> "node 11";
"node 10" -> "node 27";
"node 10" -> "node 17";
"node 10" -> "node 12";
"node 10" -> "node 15";
"node 10" -> "node 11";
"node 10" -> "node 16";
"node 11" -> "node 12";
"node 11" -> "node 28";
"node 11" -> "node 16";
"node 11" -> "node 13";
"node 11" -> "node 18";
"node 11" -> "node 24";
"node 11" -> "node 26";
"node 12" -> "node 13";
"node 12" -> "node 15";
"node 12" -> "node 31";
"node 12" -> "node 14";
"node 12" -> "node 17";
"node 12" -> "node 24";
"node 12" -> "node 26";
"node 13" -> "node 14";
"node 13" -> "node 14";
"node 13" -> "node 13";
"node 13" -> "node 18";
"node 13" -> "node 24";
"node 13" -> "node 29";
"node 13" -> "node 28";
"node 14" -> "node 15";
"node 14" -> "node 22";
"node 14" -> "node 31";
"node 14" -> "node 27";
"node 14" -> "node 14";
"node 14" -> "node 24";
"node 14" -> "node 15";
"node 15" -> "node 16";
"node 15" -> "node 29";
"node 15" -> "node 28";
"node 15" -> "node 27";
"node 15" -> "node 25";
"node 15" -> "node 23";
"node 15" -> "node 24";
"node 16" -> "node 17";
"node 16" -> "node 24";
"node 16" -> "node 29";
"node 16" -> "node 26";
"node 16" -> "node 16";
"node 16" -> "node 18";
"node 16" -> "node 23";
"node 17" -> "node 18";
"node 17" -> "node 17";
"node 17" -> "node 23";
"node 17" -> "node 26";
"node 17" -> "node 20";
"node 17" -> "node 29";
"node 17" -> "node 22";
"node 18" -> "node 19";
"node 18" -> "node 19";
"node 18" -> "node 26";
"node 18" -> "node 23";
"node 18" -> "node 20";
"node 18" -> "node 21";
"node 18" -> "node 18";
"node 19" -> "node 20";
"node 19" -> "node 21";
"node 19" -> "node 22";
"node 19" -> "node 30";
"node 19" -> "node 26";
"node 19" -> "node 23";
"node 19" -> "node 29";
"node 20" -> "node 21";
"node 20" -> "node 27";
"node 20" -> "node 25";
"node 20" -> "node 20";
"node 20" -> "node 21";
"node 20" -> "node 24";
"node 20" -> "node 31";
"node 21" -> "node 22";
"node 21" -> "node 22";
"node 21" -> "node 25";
"node 21" -> "node 30";
"node 21" -> "node 29";
"node 21" -> "node 28";
"node 21" -> "node 21";
"node 22" -> "node 23";
"node 22" -> "node 29";
"node 22" -> "node 30";
"node 22" -> "node 22";
"node 22" -> "node 28";
"node 22" -> "node 23";
"node 22" -> "node 25";
"node 23" -> "node 24";
"node 23" -> "node 25";
"node 23" -> "node 26";
"node 23" -> "node 30";
"node 23" -> "node 23";
"node 23" -> "node 28";
"node 23" -> "node 24";
}
